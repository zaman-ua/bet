{% extends 'index.layout.html.twig' %}

{% block title %}Registration title{% endblock %}


{% block body %}
    <section class="content">
        <h1>Create new account</h1>

    {#    {{ var_dump(errors) }} #}

        {% if errors.error %}
        <div class="form-error">
            {{ errors.error }}
        </div>
        {% endif %}

        <form method="POST" action="/users/registration" class="form">
            <input class="input" type="hidden" name="csrf" value="{{ csrf_token() }}" />

            <input class="input" type="text" name="data[login]" id="data-login" placeholder="login" value="{{ old.data.login }}"/>
            {% if errors.login %} {{ errors.login }} {% endif %}

            <input class="input" type="password" name="data[password]" id="data-password" placeholder="password" value="{{ old.data.password }}"/>
            {% if errors.password %} {{ errors.password }} {% endif %}

            <input class="input" type="password" name="data[retype_password]" id="data-retype_password" placeholder="retype password" value="{{ old.data.retype_password }}"/>
            {% if errors.retype_password %} {{ errors.retype_password }} {% endif %}

            <input class="input" type="text" name="data[name]" id="data-name" placeholder="name" value="{{ old.data.name }}" />
            {% if errors.name %} {{ errors.name }} {% endif %}

            <select name="data[gender]" id="data-gender" >
                <option value="o" {%if old.data.gender == 'o' %}selected{% endif %}>other</option>
                <option value="m" {%if old.data.gender == 'm' %}selected{% endif %}>male</option>
                <option value="f" {%if old.data.gender == 'f' %}selected{% endif %}>female</option>
            </select>
            {% if errors.gender %} {{ errors.gender }} {% endif %}

            <input class="input" type="date" name="data[birth_date]" id="data-birth-date" placeholder="birth date" value="{{ old.data.birth_date }}"/>
            {% if errors.birth_date %} {{ errors.birth_date }} {% endif %}

            <div id="contacts-list">
                <div class="contact-row" data-index="0">
                    <select name="contacts[0][type]" id="contacts-0-type" >
                        <option value="phone" {%if old.contacts.0.type == 'phone' %}selected{% endif %}>phone</option>
                        <option value="email" {%if old.contacts.0.type == 'email' %}selected{% endif %}>email</option>
                        <option value="address" {%if old.contacts.0.type == 'address' %}selected{% endif %}>address</option>
                    </select>
                    <input class="input" type="text" name="contacts[0][value]" id="contacts-0-value" placeholder="value" value="{{ old.contacts.0.value }}" />
                    <button type="button" class="btn-remove" aria-label="Remove">−</button>
                </div>
            </div>

            <button type="button" id="add-contact" class="btn">+ add contact</button>

            <template id="contact-template">
                <div class="contact-row" data-index="__INDEX__">
                    <select name="contacts[__INDEX__][type]" id="contacts-__INDEX__-type">
                        <option value="phone">phone</option>
                        <option value="email">email</option>
                        <option value="address">address</option>
                    </select>
                    <input class="input" type="text" name="contacts[__INDEX__][value]" id="contacts-__INDEX__-value" placeholder="value" />
                    <button type="button" class="btn-remove" aria-label="Remove">−</button>
                </div>
            </template>


            <input class="btn" type="submit" value="Create new account" />
        </form>
    </section>

{% endblock %}


{% block javascripts %}
    <script>
        $(function () {
            $(document).on('submit', '.form', function (e) {
                e.preventDefault();

                const $form = $(this);
                const $btn  = $form.find('input[type=submit],button[type=submit]');
                const action = $form.attr('action') || window.location.pathname;
                const method = ($form.attr('method') || 'POST').toUpperCase();

                // очистим предыдущие ошибки
                $form.find('.field-error').remove();
                $form.find('.is-invalid').removeClass('is-invalid');

                $btn.prop('disabled', true);

                $.ajax({
                    url: action,
                    method: method,
                    data: $form.serialize(),              // работает с data[login] и пр.
                    dataType: 'json',                     // ждём JSON
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                        'Accept': 'application/json'
                    },
                    success: function (resp, status, xhr) {
                        if (resp?.ok) {
                            // успех — редирект или сообщение
                            window.location = resp.redirect || '/';
                            return;
                        }
                        if (resp?.errors) {
                            renderErrors($form, resp.errors);
                            return;
                        }
                        // если сервер вернул HTML вместо JSON — заменим форму (fallback)
                        if (xhr.getResponseHeader('Content-Type')?.includes('text/html')) {
                            $form.replaceWith(resp);
                        }
                    },
                    error: function (xhr) {
                        if (xhr.status === 422) {
                            // валидация: { errors: { field: "message", ... } }
                            const json = xhr.responseJSON || {};
                            renderErrors($form, json.errors || {});
                        } else {
                            alert('Ошибка сервера. Попробуйте позже.');
                        }
                    },
                    complete: function () {
                        $btn.prop('disabled', false);
                    }
                });
            });

            function renderErrors($form, errors) {
                // errors: { login: '...', password: '...', ... }
                for (const [field, message] of Object.entries(errors)) {
                    // для полей вида data[login] → найдём по name
                    const selector = `[name="data[${field}]"]`;
                    const $input = $form.find(selector);
                    if ($input.length) {
                        $input.addClass('is-invalid')
                            .after(`<div class="field-error" style="color:#c00;font-size:12px;margin-top:4px;">${escapeHtml(message)}</div>`);
                    } else {
                        // общий блок вверху, если поле не найдено
                        $form.prepend(`<div class="field-error" style="color:#c00;margin-bottom:8px;">${escapeHtml(message)}</div>`);
                    }
                }
            }

            function escapeHtml(str) {
                return String(str ?? '').replace(/[&<>"']/g, s => ({
                    '&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#039;'
                })[s]);
            }
        });

        $(function () {
            const $list = $('#contacts-list');
            const $tpl  = $('#contact-template');

            $('#add-contact').on('click', function () {
                const next = $list.find('.contact-row').length;
                const html = $tpl.html().replaceAll('__INDEX__', String(next));
                $list.append(html);
            });

            $list.on('click', '.btn-remove', function () {
                if ($list.find('.contact-row').length <= 1) return; // минимум 1 строка
                $(this).closest('.contact-row').remove();
                renumber(); // чтобы индексы шли 0..N подряд
            });

            function renumber() {
                $list.find('.contact-row').each(function (idx) {
                    $(this).attr('data-index', idx);
                    $(this).find('select').attr({
                        name: `contacts[${idx}][type]`,
                        id:   `contacts-${idx}-type`
                    });
                    $(this).find('input[type="text"]').attr({
                        name: `contacts[${idx}][value]`,
                        id:   `contacts-${idx}-value`
                    });
                });
            }
        });
    </script>
{% endblock %}